from django.db import models

# Create your models here.
class User(models.Model):
    username = models.CharField(max_length=100, unique=True)
    password = models.CharField(max_length=100)
    first_name = models.CharField(max_length=100)
    last_name = models.CharField(max_length=100)
    phone_number = models.CharField(max_length=10)
    email = models.EmailField(unique=True)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.username
    
class PetType(models.Model):
    name = models.CharField(max_length=50, verbose_name='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏±‡∏ï‡∏ß‡πå')
    icon = models.CharField(max_length=10, default='üêæ')
    
    def __str__(self):
        return self.name
    
class PetSitter(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    bio = models.TextField(verbose_name='‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏ß')
    experience_years = models.PositiveIntegerField(verbose_name='‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå (‡∏õ‡∏µ)')
    location = models.CharField(max_length=100, verbose_name='‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£')
    hourly_rate_min = models.DecimalField(max_digits=6, decimal_places=2, verbose_name='‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î/‡∏ä‡∏°.')
    hourly_rate_max = models.DecimalField(max_digits=6, decimal_places=2, verbose_name='‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î/‡∏ä‡∏°.')
    pet_types = models.ManyToManyField(PetType, verbose_name='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÅ‡∏•‡πÑ‡∏î‡πâ')
    is_available = models.BooleanField(default=True, verbose_name='‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô')
    created_at = models.DateTimeField(auto_now_add=True)
    
    def __str__(self):
        return f'{self.user.first_name} {self.user.last_name}'
    
class Booking(models.Model):
    STATUS_CHOICES = [
        ('pending', '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'),
        ('confirmed', '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß'),
        ('completed', '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'),
        ('cancelled', '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'),
    ]
    
    customer = models.ForeignKey(User, on_delete=models.CASCADE, related_name='bookings')
    sitter = models.ForeignKey(PetSitter, on_delete=models.CASCADE, related_name='bookings')
    start_date = models.DateTimeField(verbose_name='‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô')
    end_date = models.DateTimeField(verbose_name='‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î')
    pet_name = models.CharField(max_length=50, verbose_name='‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á')
    pet_type = models.ForeignKey(PetType, on_delete=models.CASCADE)
    special_instructions = models.TextField(blank=True, verbose_name='‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏û‡∏¥‡πÄ‡∏®‡∏©')
    total_price = models.DecimalField(max_digits=8, decimal_places=2, verbose_name='‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°')
    status = models.CharField(max_length=20, choices=STATUS_CHOICES, default='pending')
    created_at = models.DateTimeField(auto_now_add=True)
    
    def __str__(self):
        return f'{self.customer.first_name} - {self.sitter.user.first_name} ({self.start_date.date()})'