pipeline {
  agent any

  environment {
    IMAGE_NAME = "pckzy/petsitter-finder"
    TAG = "latest"
    DOCKER_CREDENTIALS = "docker-hub-credentials-id"
    DB_NAME = credentials('db-name-id')
    DB_USER = credentials('db-user-id')
    DB_PASSWORD = credentials('db-password-id')
    DJANGO_SECRET_KEY = credentials('django-secret-key-id')
    // COMPOSE_PATH = "/home/sarun_debsirin/Petsitter-Finder/pettech/docker-compose.yml"
  }

  stages {
    stage('Clone') {
      steps {
        git branch: 'main', url: 'https://github.com/pckzy/Petsitter-Finder.git'
      }
    }

    stage('Build Docker Image') {
      steps {
        sh "docker build -t $IMAGE_NAME:$TAG pettech"
      }
    }

    stage('Push to Docker Hub') {
      steps {
        withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh """
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $IMAGE_NAME:$TAG
            docker logout
          """
        }
      }
    }

    stage('Create .env') {
      steps {
        writeFile file: 'pettech/.env', text: """
          DB_NAME=$DB_NAME
          DB_USER=$DB_USER
          DB_PASSWORD=$DB_PASSWORD
          DB_HOST=db
          DB_PORT=5432
          SECRET_KEY=$DJANGO_SECRET_KEY
          DEBUG=False
          STATIC_ROOT=/app/static
          MEDIA_ROOT=/app/media
        """
      }
    }

    stage('Deploy Local') {
      steps {
        sh """
          cd $WORKSPACE &&
          git pull origin main &&
          docker compose --env-file pettech/.env -f pettech/docker-compose.yml up -d --remove-orphans &&
          docker exec petsitter_web python manage.py collectstatic --noinput &&
          docker exec petsitter_web python manage.py migrate
        """
      }
    }
  }
}
