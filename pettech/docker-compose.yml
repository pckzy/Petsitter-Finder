version: '3.8'

services:
  web1:
    image: pckzy/petsitter-finder:latest
    container_name: petsitter_web1
    command: gunicorn pettech.wsgi:application --bind 0.0.0.0:8000 --workers=2 --threads=2 --timeout=60
    env_file:
      - .env
    environment:
      - CONTAINER_NAME=web1
    ports:
      - "8001:8000"
    depends_on:
      - db
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media

  web2:
    image: pckzy/petsitter-finder:latest
    container_name: petsitter_web2
    command: gunicorn pettech.wsgi:application --bind 0.0.0.0:8000 --workers=2 --threads=2 --timeout=60
    env_file:
      - .env
    environment:
      - CONTAINER_NAME=web2
    ports:
      - "8002:8000"
    depends_on:
      - db
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media

  nginx:
    image: nginx:latest
    container_name: petsitter_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro

    depends_on:
      - web1
      - web2
    restart: always

  db:
    image: postgres:15
    container_name: petsitter_db
    environment:
      POSTGRES_DB: petsitter
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
    volumes:
      - pgdata:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    container_name: petsitter_prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: petsitter_grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: petsitter_cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  node_exporter:
    image: prom/node-exporter
    container_name: petsitter_node_exporter
    ports:
      - "9100:9100"
    restart: always
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

volumes:
  pgdata:
  static_volume:
  media_volume: